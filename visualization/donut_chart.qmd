---
title: "donut_chart"
format: html
editor: visual
---

# **Donut chart in ggplot2**

Donut (doughnut) charts, also known as ring charts, are an alternative to [pie charts](https://r-charts.com/part-whole/pie-chart-ggplot2/) and can be created in ggplot2 in a similar way.

## **Sample data set**

The data frame below will be used in the following examples.

```{r}
df_donut <- data.frame(value = c(10, 30, 32, 28),
                 group = paste0("G", 1:4))
```

## **Basic donut chart**

A donut or ring chart can be created using `geom_col`, `coord_polar(theta = "y")` and setting a X-axis limit with `xlim` the following way.

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
library(dplyr)
```

```{r}

# Increase the value to make the hole bigger
# Decrease the value to make the hole smaller
hsize <- 4

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col() +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) 

```

## **Hole size**

We have developed the previous code so you can set the hole size with `hsize`. The bigger the value the bigger the hole size. Note that the hole size must be bigger than 0.

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Small hole
hsize <- 1

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col() +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) 

```

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Big hole
hsize <- 10

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col() +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) 

```

## **Adding labels**

You can also add labels to each slice of the donut. For that purpose you can use `geom_text` or `geom_label`, specifying the position as follows, so the text will be in the middle of each slice. Note that when using `geom_label` is recommended `show.legend = FALSE` so the legend box will not be overridden.

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Hole size
hsize <- 3

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col() +
  geom_label(aes(label = value),
             position = position_stack(vjust = 0.5),
             show.legend = FALSE) +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) 
 
 

```

## **Color customization**

The border, fill colors and the theme of the donut plot can be customized in several ways. The following codes and figures display some customization examples.

**Border color**

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Hole size
hsize <- 3

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col(color = "black") +
  geom_label(aes(label = value),
             position = position_stack(vjust = 0.5),
             show.legend = FALSE) +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) 

```

**Custom colors**

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Hole size
hsize <- 3

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col(color = "black") +
  coord_polar(theta = "y") +
  scale_fill_manual(values = c("#FFF7FB", "#D0D1E6",
                               "#74A9CF", "#0570B0")) +
  xlim(c(0.2, hsize + 0.5)) 
 

```

**Color palette and theme**

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Hole size
hsize <- 3

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col(color = "black") +
  geom_text(aes(label = value),
             position = position_stack(vjust = 0.5)) +
  coord_polar(theta = "y") +
  scale_fill_brewer(palette = "GnBu") +
  xlim(c(0.2, hsize + 0.5)) +
  theme(panel.background = element_rect(fill = "white"),
        panel.grid = element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_blank()) 
 
 
 
 
 

```

## **Legend customization**

As in other ggplot2 plots the legend can be customized in several ways. The following codes show how to change the legend key labels, the legend title or how to get rid of the legend.

**Legend key labels**

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Hole size
hsize <- 3

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col(color = "black") +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) +
  scale_fill_discrete(labels = c("A", "B", "C", "D")) 

```

**Legend title#**

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Hole size
hsize <- 3

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col(color = "black") +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) +
  guides(fill = guide_legend(title = "Title")) 

```

**Remove legend**

```{r}
# install.packages("ggplot2")
# install.packages("dplyr")
# library(ggplot2)
# library(dplyr)

# Hole size
hsize <- 3

df_donut <- df_donut %>% 
  mutate(x = hsize)

ggplot(df_donut, aes(x = hsize, y = value, fill = group)) +
  geom_col(color = "black") +
  coord_polar(theta = "y") +
  xlim(c(0.2, hsize + 0.5)) +
  theme(legend.position = "none") 

```

# **Donut chart in R with lessR**

## **Donut chart with `lessR` package**

Donut or doughnut charts are an alternative chart for [pie charts](https://r-coder.com/pie-chart-r/), which have a hole in the middle, making them cleaner to read than pie charts. In base R it is possible to create this type of visualizations with `PieChart` function from `lessR` package.

Consider the `"Employee"` data (provided by the package) and pass the `Dept` (department) column to the function, indicating the name of the data set. We have set `main = NULL` to remove the default title. Note that you can also use `pc` function as a shorthand.

```{r}
# install.packages(lessR)
library(lessR)

# Sample data of the package
data <- rd("Employee")

# Donut chart
PieChart(Dept, data = data,
         main = NULL)

# Equivalent to:
pc(Dept, data = data,
   main = NULL) 



```

The function also provides an argument named `rows`, which allows you to make a subset of your data. In this example we are selecting only females with a salary higher than 45000.

```{r}
# install.packages(lessR)
library(lessR)

# Sample data of the package
data <- rd("Employee")

# Donut chart
PieChart(Dept, data = data,
         hole = 0.1,
         main = NULL) 


```

**Values customization**

```{r}
# install.packages(lessR)
library(lessR)

# Sample data of the package
data <- rd("Employee")

# Donut chart
PieChart(Dept, data = data,
         fill = "viridis",
         main = NULL,
         color = "black",
         lwd = 1.5,
         values_color = c(rep("white", 4), 1),
         values_size = 0.85) 
 

```
