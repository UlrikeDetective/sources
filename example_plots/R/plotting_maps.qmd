---
title: "GPS_data_plotting"
format: html
editor: visual
---

# **Introduction to plotting maps with R**

# **Getting the data**

First thing we need to do is get some data. The [Istituto Nazionale di Geofisica e Vulcanologia](http://www.ingv.it/) (INGV) has a neat [site](http://cnt.rm.ingv.it/) where you can access lots of data. So that will be the source for my work.

```{r}
# Get data from INGV
today <- as.character(Sys.Date())

thecall <- paste("curl 'http://webservices.ingv.it/fdsnws/event/1/query?starttime=2005-04-01T00%3A00%3A00&endtime=",today,"T23%3A59%3A59&minmag=2&maxmag=10&mindepth=-10&maxdepth=1000&minlat=35&maxlat=49&minlon=5&maxlon=20&minversion=100&orderby=time-asc&format=text&limit=10000' -o ./ingv.csv", sep = "")
system(thecall)

# Create data frame
ingv <- read.csv("./ingv.csv", sep="|")
```

```{r}
ingv
```

What I'm doing here is getting the current date and creating a call to invoke the INGV web service so that i t can return a text file containing all events starting from a certain date in Italy. That text file is saved in my working directory as ./ingv.csv

INGV returns the values separated by a pipe character so I need to specify it in the csv reading function.

The data is already tidy and in the format that I need for now so I won't run other commands in the data frame in order to manipulate it.

# **Quick plot with rworldmap**

```{r}
# install.packages("mapdata")
```

First way of plotting the data would be by using the rworldmap package. I'll use that to create a png file for my plot that will map all events occurred in the region.

```{r}
library(mapdata)
library(ggplot2)

# Load map data for Italy
italy <- ggplot2::map_data('world2', 'italy')

# Create a plot using ggplot()
italy_earthquake <- ggplot() +
  geom_polygon(data = italy, aes(x = long, y = lat, group = group)) +
  coord_fixed()

# Assuming 'ingv' is a data frame with Longitude and Latitude columns
italy_earthquake <- italy_earthquake + geom_point(data = ingv, aes(x = Longitude, y = Latitude), color = "red", size = 0.6)

# Save the plot
ggsave("plot.png", plot = italy_earthquake)

italy_earthquake
```

```{r}
install.packages("ggfortify")
```

```{r}
library(ggfortify)

# Load map data for Italy
italy <- ggplot2::map_data('world2', 'italy')

# Create a plot using ggplot()
italy_earthquake <- ggplot() +
  geom_polygon(data = italy, aes(x = long, y = lat, group = group)) +
  coord_fixed()

# Assuming 'ingv' is a data frame with Longitude and Latitude columns
italy_earthquake_1 <- italy_earthquake + geom_point(data = ingv, aes(x = Longitude, y = Latitude), color = "red", size = 0.6, fill = 'white')

italy_earthquake_1

italy_p <-  ggplot() + 
  geom_polygon(data = italy, aes(x=long, y = lat, group = group), fill = NA, color = "red") + 
  coord_fixed()

italy_p

italy_earthquake_2 <- italy_p + geom_point(data = ingv, aes(x = Longitude, y = Latitude), color = "red", size = 0.3)

italy_earthquake_2
```

```{r}
library(mapdata)
library(ggplot2)

jp <- ggplot2::map_data('world2', 'japan')
class(jp)
jp

```

```{r}
ggplot(jp, aes(x = long, y = lat, group = group)) +
  geom_polygon()  + 
  coord_fixed(0.9)
```

```{r}
library(ggfortify)
jp <-  map('world2', 'japan', plot = FALSE, fill = TRUE)
class(jp)  + 
  coord_fixed(1.3)

autoplot(jp)
```

```{r}
p <- autoplot(jp, geom = 'polygon', fill = 'subregion') + 
  theme(legend.position="none")
p
```

```{r}
cities <- get('world.cities')
cities <- cities[cities$country.etc == 'Japan', ]
head(cities, 60)
```

```{r}
p + geom_point(data = cities, aes(x = long, y = lat),
               colour = 'blue', size = 0.1)
```

```{r}
p + geom_point(data = cities, colour = 'blue', size = 0.1)
```

```{r}
library(sp)
df <- data.frame(long = c(139.691704, 135.519711),
                 lat = c(35.689521, 34.686316),
                 label = c('Tokyo', 'Osaka'),
                 population = c(1335, 886))
coordinates(df) <- ~ long + lat
class(df)
```

```{r}
autoplot(df, p = p, colour = 'red', size = 10)
```

```{r}
autoplot(df, p = p, colour = 'red', size = 'population') +
  scale_size_area()
```

```{r}
library(ggmap)
bbox <- c(130.0, 30.0, 145.0, 45.0)
map <- get_openstreetmap(bbox = bbox, scale = 47500000)
p <- ggmap(map)
autoplot(df, p = p, colour = 'red', size = 'population') + 
  scale_size_area() +
  theme(legend.justification = c(1, 0), legend.position = c(1, 0))
```
