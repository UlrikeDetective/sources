library(shiny)
library(dplyr)
library(purrr)
library(gapminder)
library(highcharter)
head(gapminder)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
titlePanel("R Shiny Highcharts"),
selectInput(
inputId = "inContinent",
label = "Continent:",
choices = unique(gapminder$continent),
selected = "Europe"
),
selectInput(
inputId = "inYearMin",
label = "Start year:",
choices = unique(gapminder$year)[1:length(unique(gapminder$year)) - 1],
selected = min(gapminder$year)
),
selectInput(
inputId = "inYearMax",
label = "End year:",
choices = unique(gapminder$year)[2:length(unique(gapminder$year))],
selected = max(gapminder$year)
),
width = 3
),
mainPanel(
tags$h3("Latest stats:"),
tags$div(
tags$div(
tags$p("#Countries"),
textOutput(outputId = "outNCountries")
),
tags$div(
tags$p("Median life exp."),
textOutput(outputId = "outMedLifeExp")
),
tags$div(
tags$p("Median population"),
textOutput(outputId = "outMedPop")
),
tags$div(
tags$p("Median GDP"),
textOutput(outputId = "outMedGDP")
)
),
width = 9
)
)
)
server <- function(input, output) {
data_cards <- reactive({
gapminder %>%
filter(
continent == input$inContinent,
year == max(year)
) %>%
summarise(
nCountries = n_distinct(country),
medianLifeExp = median(lifeExp),
medianPopM = median(pop / 1e6),
medianGDP = median(gdpPercap)
)
})
output$outNCountries <- renderText({
data_cards()$nCountries
})
output$outMedLifeExp <- renderText({
paste(round(data_cards()$medianLifeExp, 1), "years")
})
output$outMedPop <- renderText({
paste0(round(data_cards()$medianPopM, 2), "M")
})
output$outMedGDP <- renderText({
paste0("$", round(data_cards()$medianGDP, 2))
})
}
shinyApp(ui = ui, server = server)
library(dplyr)
library(purrr)
library(highcharter)
sales <- read.csv2("data.csv")
sales <- read.csv2("/Users/ulrike_imac_air/projects/R_themes/examples/data.csv")
sales
sales_by_country <- sales %>%
group_by(country) %>%
summarise(
sales = sum(sales)
)
sales_by_country
hchart(sales_by_country, "column", hcaes(x = country, y = sales), color = "#0198f9") |>
hc_title(text = "Total sales by country")
sales_spain <- sales %>%
filter(country == "Spain") %>%
select(-country)
sales_spain
hchart(sales_spain, "column", hcaes(x = city, y = sales), color = "#0198f9") |>
hc_title(text = "Sales in Spain by city")
base_chart_data <- sales %>%
group_by(country) %>%
summarise(
sales = sum(sales)
) %>%
arrange(desc(sales))
base_chart_data
drilldown_chart_data <- sales %>%
group_nest(country) %>%
mutate(
id = country,
type = "column",
data = map(data, mutate, name = city, y = sales),
data = map(data, list_parse)
)
drilldown_chart_data
hchart(
base_chart_data,
"column",
hcaes(x = country, y = sales, drilldown = country),
name = "Sales",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
)
# click on countries
hchart(
base_chart_data,
"column",
hcaes(x = country, y = sales, drilldown = country),
name = "Sales",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
) |>
hc_colors(c("#004c5f", "#0099bf", "#00ccff")) |>
hc_title(text = "Company sales report") |>
hc_subtitle(text = "Source: Internal") |>
hc_xAxis(title = list(text = "Location")) |>
hc_yAxis(title = list(text = "Sales in $000")) |>
hc_add_theme(hc_theme_smpl())
x <- c("Sales (000):")
y <- c("${point.sales}")
tt <- tooltip_table(x, y)
hchart(
base_chart_data,
"column",
hcaes(x = country, y = sales, drilldown = country),
name = "Sales",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
) |>
hc_tooltip(
pointFormat = tt,
useHTML = TRUE,
valueDecimals = 0
) |>
hc_colors(c("#004c5f", "#0099bf", "#00ccff")) |>
hc_title(text = "Company sales report") |>
hc_subtitle(text = "Source: Internal") |>
hc_xAxis(title = list(text = "Location")) |>
hc_yAxis(title = list(text = "Sales in $000")) |>
hc_add_theme(hc_theme_smpl())
hchart(
base_chart_data,
"column",
hcaes(x = country, y = sales, drilldown = country),
name = "Sales",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
) |>
hc_tooltip(
formatter = JS("function(){return '<i>Sales in 000:</i><br>' + '$ ' + this.point.sales;}")
) |>
hc_colors(c("#004c5f", "#0099bf", "#00ccff")) |>
hc_title(text = "Company sales report") |>
hc_subtitle(text = "Source: Internal") |>
hc_xAxis(title = list(text = "Location")) |>
hc_yAxis(title = list(text = "Sales in $000")) |>
hc_add_theme(hc_theme_google())
hchart(
base_chart_data,
"pie",
hcaes(x = country, y = sales, drilldown = country),
name = "Sales",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
) |>
hc_title(text = "Company sales report") |>
hc_subtitle(text = "Source: Internal")
drilldown_chart_data <- sales %>%
group_nest(country) %>%
mutate(
id = country,
type = "pie",
data = map(data, mutate, name = city, y = sales),
data = map(data, list_parse)
)
hchart(
base_chart_data,
"pie",
hcaes(x = country, y = sales, drilldown = country),
name = "Sales",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
) |>
hc_title(text = "Company sales report") |>
hc_subtitle(text = "Source: Internal")
sales <- read.csv2("/Users/ulrike_imac_air/projects/DataScienceProjects/tech_layoffs_project/tech_layoffs_csv/tech_layoffs_Q22024_csv/layoffs_Continent_sum_year.csv")
sales
sales <- read.csv("/Users/ulrike_imac_air/projects/DataScienceProjects/tech_layoffs_project/tech_layoffs_csv/tech_layoffs_Q22024_csv/layoffs_Continent_sum_year.csv")
sales
drilldown_chart_data <- Total_Laid_off %>%
group_nest(continent) %>%
mutate(
id = continent,
type = "column",
data = map(data, mutate, name = X2020:X2024, y = Total_Laid_off),
data = map(data, list_parse)
)
tech_layoffs <- read.csv("/Users/ulrike_imac_air/projects/DataScienceProjects/tech_layoffs_project/tech_layoffs_csv/tech_layoffs_Q22024_csv/layoffs_Continent_sum_year.csv")
sales
drilldown_chart_data <- tech_layoffs %>%
group_nest(continent) %>%
mutate(
id = continent,
type = "column",
data = map(data, mutate, name = Total_Laid_off, y = X2020:X2024),
data = map(data, list_parse)
)
# Reshape data to long format
tech_layoffs_long <- tech_layoffs %>%
pivot_longer(cols = starts_with("X"), names_to = "Year", values_to = "Laid_off") %>%
mutate(Year = as.integer(sub("X", "", Year)))
library(dplyr)
library(tidyr)
library(purrr)
library(highcharter)
# Reshape data to long format
tech_layoffs_long <- tech_layoffs %>%
pivot_longer(cols = starts_with("X"), names_to = "Year", values_to = "Laid_off") %>%
mutate(Year = as.integer(sub("X", "", Year)))
# Reshape data to long format
tech_layoffs_long <- tech_layoffs %>%
pivot_longer(cols = starts_with("X"), names_to = "Year", values_to = "Laid_off") %>%
mutate(Year = as.integer(sub("X", "", Year)))
tech_layoffs_long
# Group and nest data
drilldown_chart_data <- tech_layoffs_long %>%
group_by(Continent) %>%
nest() %>%
mutate(
id = Continent,
type = "column",
data = map(data, ~mutate(.x, name = Total_Laid_off, y = Laid_off)),
data = map(data, list_parse)
drilldown_chart_data <- tech_layoffs_long %>%
group_by(Continent) %>%
nest() %>%
mutate(
id = Continent,
type = "column",
data = map(data, ~mutate(.x, name = Total_Laid_off, y = Laid_off)),
data = map(data, list_parse)
)
hchart(
drilldown_chart_data,
"column",
hcaes(x = Continent, y = Laid_off, drilldown = Continent),
name = "tech_layoffs",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
)
hchart(
base_chart_data,
"column",
hcaes(x = Continent, y = Laid_off, drilldown = Continent),
name = "tech_layoffs",
colorByPoint = TRUE
) |>
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
)
# Create highchart with drilldown
highchart() %>%
hc_chart(type = "column") %>%
hc_title(text = "Tech Layoffs by Continent") %>%
hchart(
base_chart_data,
"column",
hcaes(x = Continent, y = Total_Laid_off, drilldown = Continent),
name = "Total Layoffs",
colorByPoint = TRUE
) %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
)
# Create highchart with drilldown
# Create highchart with drilldown
highchart() %>%
hc_chart(type = "column") %>%
hc_title(text = "Tech Layoffs by Continent") %>%
hc_add_series(
name = "Total Layoffs",
data = list_parse(base_chart_data),
colorByPoint = TRUE
) %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown_chart_data)
)
